[tool.coverage.run]
branch = true
source = ["traceloop/sdk"]

[tool.coverage.report]
exclude_lines = ["if TYPE_CHECKING:"]
show_missing = true

[tool.poetry]
name = "traceloop-sdk"
version = "0.40.7"
description = "Traceloop Software Development Kit (SDK) for Python"
authors = [
    "Gal Kleinman <gal@traceloop.com>",
    "Nir Gazit <nir@traceloop.com>",
    "Tomer Friedman <tomer@traceloop.com>",
]
repository = "https://github.com/traceloop/openllmetry"
documentation = "https://traceloop.com/docs/openllmetry"
license = "Apache-2.0"
readme = "README.md"

[[tool.poetry.packages]]
include = "traceloop/sdk"

[tool.poetry.dependencies]
python = ">=3.10,<4"

# Core Dependencies (always installed)
opentelemetry-api = "^1.28.0"
opentelemetry-sdk = "^1.28.0"
opentelemetry-exporter-otlp-proto-http = "^1.28.0"
opentelemetry-exporter-otlp-proto-grpc = "^1.28.0"
opentelemetry-instrumentation-logging = ">=0.50b0"
opentelemetry-instrumentation-requests = ">=0.50b0"
opentelemetry-instrumentation-sqlalchemy = ">=0.50b0"
opentelemetry-instrumentation-urllib3 = ">=0.50b0"
opentelemetry-instrumentation-threading = ">=0.50b0"
opentelemetry-semantic-conventions-ai = "0.4.9"
colorama = "^0.4.6"
tenacity = ">=8.2.3, <10.0"
pydantic = ">=1"
jinja2 = "^3.1.5"
deprecated = "^1.2.14"
posthog = ">3.0.2, <4"
aiohttp = "^3.11.11"

# LLM Providers
opentelemetry-instrumentation-openai = "==0.40.7"
opentelemetry-instrumentation-anthropic = "==0.40.7"
opentelemetry-instrumentation-mistralai = "==0.40.7"
opentelemetry-instrumentation-cohere = "==0.40.7"
opentelemetry-instrumentation-ollama = "==0.40.7"
opentelemetry-instrumentation-groq = "==0.40.7"
opentelemetry-instrumentation-together = "==0.40.7"
opentelemetry-instrumentation-alephalpha = "==0.40.7"

# Cloud AI Services
opentelemetry-instrumentation-google-generativeai = "==0.40.7"
opentelemetry-instrumentation-bedrock = "==0.40.7"
opentelemetry-instrumentation-sagemaker = "==0.40.7"
opentelemetry-instrumentation-vertexai = "==0.40.7"
opentelemetry-instrumentation-watsonx = "==0.40.7"
opentelemetry-instrumentation-replicate = "==0.40.7"

# Frameworks and Integration
opentelemetry-instrumentation-langchain = "==0.40.7"
opentelemetry-instrumentation-llamaindex = "==0.40.7"
opentelemetry-instrumentation-crewai = "==0.40.7"
opentelemetry-instrumentation-haystack = "==0.40.7"
opentelemetry-instrumentation-transformers = "==0.40.7"
opentelemetry-instrumentation-mcp = "==0.40.7"

# Vector Store and Databases
opentelemetry-instrumentation-pinecone = "==0.40.7"
opentelemetry-instrumentation-qdrant = "==0.40.7"
opentelemetry-instrumentation-lancedb = "==0.40.7"
opentelemetry-instrumentation-chromadb = "==0.40.7"
opentelemetry-instrumentation-milvus = "==0.40.7"
opentelemetry-instrumentation-weaviate = "==0.40.7"
opentelemetry-instrumentation-marqo = "==0.40.7"

[tool.poetry.extras]
# LLM Providers
openai = ["opentelemetry-instrumentation-openai"]
anthropic = ["opentelemetry-instrumentation-anthropic"]
mistralai = ["opentelemetry-instrumentation-mistralai"]
cohere = ["opentelemetry-instrumentation-cohere"]
ollama = ["opentelemetry-instrumentation-ollama"]
groq = ["opentelemetry-instrumentation-groq"]
together = ["opentelemetry-instrumentation-together"]
alephalpha = ["opentelemetry-instrumentation-alephalpha"]

# Cloud AI Services
google-ai = ["opentelemetry-instrumentation-google-generativeai"]
bedrock = ["opentelemetry-instrumentation-bedrock"]
sagemaker = ["opentelemetry-instrumentation-sagemaker"]
vertexai = ["opentelemetry-instrumentation-vertexai"]
watsonx = ["opentelemetry-instrumentation-watsonx"]
replicate = ["opentelemetry-instrumentation-replicate"]

# Frameworks
langchain = ["opentelemetry-instrumentation-langchain"]
llamaindex = ["opentelemetry-instrumentation-llamaindex"]
crewai = ["opentelemetry-instrumentation-crewai"]
haystack = ["opentelemetry-instrumentation-haystack"]
transformers = ["opentelemetry-instrumentation-transformers"]
mcp = ["opentelemetry-instrumentation-mcp"]

# Vector Stores & Databases
pinecone = ["opentelemetry-instrumentation-pinecone"]
qdrant = ["opentelemetry-instrumentation-qdrant"]
weaviate = ["opentelemetry-instrumentation-weaviate"]
chromadb = ["opentelemetry-instrumentation-chromadb"]
lancedb = ["opentelemetry-instrumentation-lancedb"]
milvus = ["opentelemetry-instrumentation-milvus"]
marqo = ["opentelemetry-instrumentation-marqo"]

# Grouped installations
llm-providers = [
    "opentelemetry-instrumentation-openai",
    "opentelemetry-instrumentation-anthropic",
    "opentelemetry-instrumentation-mistralai",
    "opentelemetry-instrumentation-cohere",
    "opentelemetry-instrumentation-ollama",
    "opentelemetry-instrumentation-groq",
    "opentelemetry-instrumentation-together",
    "opentelemetry-instrumentation-alephalpha",
]

cloud-services = [
    "opentelemetry-instrumentation-google-generativeai",
    "opentelemetry-instrumentation-bedrock",
    "opentelemetry-instrumentation-sagemaker",
    "opentelemetry-instrumentation-vertexai",
    "opentelemetry-instrumentation-watsonx",
    "opentelemetry-instrumentation-replicate",
]

frameworks = [
    "opentelemetry-instrumentation-langchain",
    "opentelemetry-instrumentation-llamaindex",
    "opentelemetry-instrumentation-crewai",
    "opentelemetry-instrumentation-haystack",
    "opentelemetry-instrumentation-transformers",
    "opentelemetry-instrumentation-mcp",
]

vectorstores = [
    "opentelemetry-instrumentation-pinecone",
    "opentelemetry-instrumentation-qdrant",
    "opentelemetry-instrumentation-weaviate",
    "opentelemetry-instrumentation-chromadb",
    "opentelemetry-instrumentation-lancedb",
    "opentelemetry-instrumentation-milvus",
    "opentelemetry-instrumentation-marqo",
]

all = [
    "opentelemetry-instrumentation-openai",
    "opentelemetry-instrumentation-anthropic",
    "opentelemetry-instrumentation-mistralai",
    "opentelemetry-instrumentation-cohere",
    "opentelemetry-instrumentation-ollama",
    "opentelemetry-instrumentation-groq",
    "opentelemetry-instrumentation-together",
    "opentelemetry-instrumentation-alephalpha",
    "opentelemetry-instrumentation-google-generativeai",
    "opentelemetry-instrumentation-bedrock",
    "opentelemetry-instrumentation-sagemaker",
    "opentelemetry-instrumentation-vertexai",
    "opentelemetry-instrumentation-watsonx",
    "opentelemetry-instrumentation-replicate",
    "opentelemetry-instrumentation-langchain",
    "opentelemetry-instrumentation-llamaindex",
    "opentelemetry-instrumentation-crewai",
    "opentelemetry-instrumentation-haystack",
    "opentelemetry-instrumentation-transformers",
    "opentelemetry-instrumentation-mcp",
    "opentelemetry-instrumentation-pinecone",
    "opentelemetry-instrumentation-qdrant",
    "opentelemetry-instrumentation-weaviate",
    "opentelemetry-instrumentation-chromadb",
    "opentelemetry-instrumentation-lancedb",
    "opentelemetry-instrumentation-milvus",
    "opentelemetry-instrumentation-marqo",
]

[tool.poetry.group.dev.dependencies]
autopep8 = "^2.2.0"
flake8 = "7.0.0"
pytest = "^8.2.2"
pytest-sugar = "1.0.0"

[tool.poetry.group.test.dependencies]
openai = "^1.31.1"
vcrpy = "^6.0.1"
pytest-recording = "^0.13.1"
pydantic = "<3"
pytest-asyncio = "^0.23.7"
anthropic = "^0.25.2"
langchain = "^0.2.5"
langchain-openai = "^0.1.15"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
