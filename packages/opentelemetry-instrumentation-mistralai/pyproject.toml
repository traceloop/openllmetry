[tool.coverage.run]
branch = true
source = [ "opentelemetry/instrumentation/mistralai" ]

[tool.coverage.report]
exclude_lines = ['if TYPE_CHECKING:']
show_missing = true

[tool.poetry]
name = "opentelemetry-instrumentation-mistralai"
version = "0.22.0"
description = "OpenTelemetry Mistral AI instrumentation"
authors = [
  "Gal Kleinman <gal@traceloop.com>",
  "Nir Gazit <nir@traceloop.com>",
]
repository = "https://github.com/traceloop/openllmetry/tree/main/packages/opentelemetry-instrumentation-mistralai"
license = "Apache-2.0"
readme = "README.md"

[[tool.poetry.packages]]
include = "opentelemetry/instrumentation/mistralai"

[tool.poetry.dependencies]
python = ">=3.9,<4"
opentelemetry-api = "^1.25.0"
opentelemetry-instrumentation = "^0.46b0"
opentelemetry-semantic-conventions = "^0.46b0"
opentelemetry-semantic-conventions-ai = "0.3.1"

[tool.poetry.group.dev.dependencies]
autopep8 = "^2.2.0"
flake8 = "7.0.0"
pytest = "^8.2.2"
pytest-sugar = "1.0.0"

[tool.poetry.group.test.dependencies]
mistralai = "^0.2.0"
pytest = "^8.2.2"
pytest-sugar = "1.0.0"
vcrpy = "^6.0.1"
pytest-recording = "^0.13.1"
pytest-asyncio = "^0.23.7"
opentelemetry-sdk = "^1.23.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.extras]
instruments = ["mistralai"]

[tool.poetry.plugins."opentelemetry_instrumentor"]
mistralai = "opentelemetry.instrumentation.mistralai:MistralAiInstrumentor"
