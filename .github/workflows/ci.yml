name: CI

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"

env:
  POETRY_CACHE_DIR: /tmp/pypoetry-cache
  POETRY_VENV_IN_PROJECT: false
  POETRY_INSTALLER_MODERN_INSTALLATION: false
  PIP_NO_CACHE_DIR: 1

jobs:
  lint-pr:
    name: Lint PR
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_target' && contains('["opened", "edited", "synchronize"]', github.event.action)
    permissions:
      pull-requests: read
    steps:
      - name: Validate PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Free up disk space
        run: |
          # Remove unnecessary software and cached packages
          sudo apt-get remove -y '^dotnet-.*' '^llvm-.*' 'php.*' '^mongodb-.*' '^mysql-.*' azure-cli google-cloud-cli google-chrome-stable firefox powershell mono-devel libgl1-mesa-dri || true
          sudo apt-get autoremove -y
          sudo apt-get clean
          # Remove Docker images and containers
          docker system prune -af || true
          # Remove additional system files
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL || true
          sudo rm -rf /imagegeneration || true
          # Clear APT cache completely
          sudo rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/* || true
          # Show available space
          df -h
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{  github.event.pull_request.head.sha }}

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: ~/.cache/pypoetry/virtualenvs

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - uses: nrwl/nx-set-shas@v4
      - run: npm ci --cache ~/.npm --prefer-offline
      - name: Clean npm cache
        run: npm cache clean --force || true
      - run: npx nx affected -t install --with dev
      - name: Clean Poetry caches after install
        run: |
          poetry cache clear pypi --all || true
          poetry cache clear _default_cache --all || true
          rm -rf ~/.cache/pypoetry/artifacts || true
      - run: npx nx affected -t lint --parallel=3

  build-packages:
    name: Build Packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Free up disk space
        run: |
          # Remove unnecessary software and cached packages
          sudo apt-get remove -y '^dotnet-.*' '^llvm-.*' 'php.*' '^mongodb-.*' '^mysql-.*' azure-cli google-cloud-cli google-chrome-stable firefox powershell mono-devel libgl1-mesa-dri || true
          sudo apt-get autoremove -y
          sudo apt-get clean
          # Remove Docker images and containers
          docker system prune -af || true
          # Remove additional system files
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL || true
          sudo rm -rf /imagegeneration || true
          # Clear APT cache completely
          sudo rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/* || true
          # Show available space
          df -h
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: ~/.cache/pypoetry/virtualenvs

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - uses: nrwl/nx-set-shas@v4

      - run: npm ci --cache ~/.npm --prefer-offline
      - name: Clean npm cache
        run: npm cache clean --force || true

      - name: Install
        run: npx nx affected -t install --with dev --parallel=2

      - name: Clean Poetry caches after install
        run: |
          poetry cache clear pypi --all || true
          poetry cache clear _default_cache --all || true
          rm -rf ~/.cache/pypoetry/artifacts || true

      - name: Build
        run: npx nx affected -t build-release --parallel=2
        
      - name: Clean build artifacts to save space
        run: |
          find packages -name "dist" -type d -exec rm -rf {} + || true
          find packages -name "*.egg-info" -type d -exec rm -rf {} + || true

  test-packages:
    name: Test Packages
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Free up disk space
        run: |
          # Remove unnecessary software and cached packages
          sudo apt-get remove -y '^dotnet-.*' '^llvm-.*' 'php.*' '^mongodb-.*' '^mysql-.*' azure-cli google-cloud-cli google-chrome-stable firefox powershell mono-devel libgl1-mesa-dri || true
          sudo apt-get autoremove -y
          sudo apt-get clean
          # Remove Docker images and containers
          docker system prune -af || true
          # Remove additional system files
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL || true
          sudo rm -rf /imagegeneration || true
          # Clear APT cache completely
          sudo rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/* || true
          # Show available space
          df -h
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{  github.event.pull_request.head.sha }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: ~/.cache/pypoetry/virtualenvs

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - uses: nrwl/nx-set-shas@v4

      - run: npm ci --cache ~/.npm --prefer-offline
      - name: Clean npm cache
        run: npm cache clean --force || true

      - name: Install
        run: npx nx affected -t install --exclude='sample-app' --with dev --parallel=2

      - name: Clean Poetry caches after install
        run: |
          poetry cache clear pypi --all || true
          poetry cache clear _default_cache --all || true
          rm -rf ~/.cache/pypoetry/artifacts || true

      - name: Test
        env:
          HAYSTACK_TELEMETRY_ENABLED: False
        run: npx nx affected -t test --exclude='sample-app' --exclude='opentelemetry-instrumentation-haystack' --parallel=2
        
      - name: Clean test artifacts to save space
        run: |
          find packages -name ".pytest_cache" -type d -exec rm -rf {} + || true
          find packages -name "__pycache__" -type d -exec rm -rf {} + || true
          find packages -name "*.pyc" -delete || true
